// Copyright Â© 2024 The Things Network Foundation, The Things Industries B.V.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package ttn.lorawan.v3;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "thethings/flags/annotations.proto";
import "ttn/lorawan/v3/end_device.proto";
import "ttn/lorawan/v3/identifiers.proto";
import "validate/validate.proto";

option go_package = "go.thethings.network/lorawan-stack/v3/pkg/ttnpb";

message CreateMACSettingsProfileRequest {
  // The MAC settings profile to create.
  MACSettingsProfile mac_settings_profile = 1 [(validate.rules).message.required = true];
}

message CreateMACSettingsProfileResponse {
  // The MAC settings profile.
  MACSettingsProfile mac_settings_profile = 1 [(validate.rules).message.required = true];
}

message GetMACSettingsProfileRequest {
  // The identifiers of the MAC settings profile.
  MACSettingsProfileIdentifiers mac_settings_profile_ids = 1 [(validate.rules).message.required = true];
  // The names of the fields that should be returned.
  google.protobuf.FieldMask field_mask = 2;
}

message GetMACSettingsProfileResponse {
  // The MAC settings profile.
  MACSettingsProfile mac_settings_profile = 1 [(validate.rules).message.required = true];
}

message UpdateMACSettingsProfileRequest {
  // The identifiers of the MAC settings profile.
  MACSettingsProfileIdentifiers mac_settings_profile_ids = 1 [(validate.rules).message.required = true];
  // The MAC settings profile to update.
  MACSettingsProfile mac_settings_profile = 2 [(validate.rules).message.required = true];
  // The names of the fields that should be updated.
  google.protobuf.FieldMask field_mask = 3;
}

message UpdateMACSettingsProfileResponse {
  // The MAC settings profile.
  MACSettingsProfile mac_settings_profile = 1 [(validate.rules).message.required = true];
}

message DeleteMACSettingsProfileRequest {
  // The identifiers of the MAC settings profile.
  MACSettingsProfileIdentifiers mac_settings_profile_ids = 1 [(validate.rules).message.required = true];
}

message DeleteMACSettingsProfileResponse {}

message ListMACSettingsProfilesRequest {
  option (thethings.flags.message) = {
    select: false,
    set: true
  };
  // The identifiers of the application.
  ApplicationIdentifiers application_ids = 1 [(validate.rules).message.required = true];
  // The names of the fields that should be returned.
  google.protobuf.FieldMask field_mask = 2;
  // Order the results by this field path (must be present in the field mask).
  // Default ordering is by ID. Prepend with a minus (-) to reverse the order.
  string order = 3 [(validate.rules).string = {
    in: [
      "",
      "ids.profile_id",
      "-ids.profile_id"
    ]
  }];
  // Limit the number of results per page.
  uint32 limit = 4 [(validate.rules).uint32.lte = 1000];
  // Page number for pagination. 0 is interpreted as 1.
  uint32 page = 5;
}

message ListMACSettingsProfilesResponse {
  // The MAC settings profiles.
  repeated MACSettingsProfile mac_settings_profiles = 1;
  // The total number of MAC settings profiles that match the request.
  uint32 total_count = 2;
}

// The NsMACSettingsProfileRegistry service allows clients to manage MAC settings profiles on the Network Server.
service NsMACSettingsProfileRegistry {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {description: "Manage MAC settings profiles on The Things Stack Network Server."};

  // Create creates a new MAC settings profile.
  rpc Create(CreateMACSettingsProfileRequest) returns (CreateMACSettingsProfileResponse) {
    option (google.api.http) = {
      post: "/ns/applications/{mac_settings_profile.ids.application_ids.application_id}/mac_settings_profiles"
      body: "*"
    };
  }

  // Get returns the MAC settings profile that matches the given identifiers.
  rpc Get(GetMACSettingsProfileRequest) returns (GetMACSettingsProfileResponse) {
    option (google.api.http) = {get: "/ns/applications/{mac_settings_profile_ids.application_ids.application_id}/mac_settings_profiles/{mac_settings_profile_ids.profile_id}"};
  }

  // Update updates the MAC settings profile that matches the given identifiers.
  rpc Update(UpdateMACSettingsProfileRequest) returns (UpdateMACSettingsProfileResponse) {
    option (google.api.http) = {
      put: "/ns/applications/{mac_settings_profile_ids.application_ids.application_id}/mac_settings_profiles/{mac_settings_profile_ids.profile_id}"
      body: "*"
    };
  }

  // Delete deletes the MAC settings profile that matches the given identifiers.
  rpc Delete(DeleteMACSettingsProfileRequest) returns (DeleteMACSettingsProfileResponse) {
    option (google.api.http) = {delete: "/ns/applications/{mac_settings_profile_ids.application_ids.application_id}/mac_settings_profiles/{mac_settings_profile_ids.profile_id}"};
  }

  // List lists the MAC settings profiles.
  rpc List(ListMACSettingsProfilesRequest) returns (ListMACSettingsProfilesResponse) {
    option (google.api.http) = {get: "/ns/applications/{application_ids.application_id}/mac_settings_profiles"};
  }
}
