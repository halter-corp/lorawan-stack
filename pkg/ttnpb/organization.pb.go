// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lorawan-stack/api/organization.proto

package ttnpb

import (
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_sortkeys "github.com/gogo/protobuf/sortkeys"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	types "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Organization struct {
	OrganizationIdentifiers `protobuf:"bytes,1,opt,name=ids,proto3,embedded=ids" json:"ids"`
	CreatedAt               time.Time  `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at"`
	UpdatedAt               time.Time  `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3,stdtime" json:"updated_at"`
	DeletedAt               *time.Time `protobuf:"bytes,8,opt,name=deleted_at,json=deletedAt,proto3,stdtime" json:"deleted_at,omitempty"`
	Name                    string     `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description             string     `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Key-value attributes for this organization. Typically used for organizing organizations or for storing integration-specific data.
	Attributes map[string]string `protobuf:"bytes,6,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Contact information for this organization. Typically used to indicate who to contact with security/billing questions about the organization.
	ContactInfo          []*ContactInfo `protobuf:"bytes,7,rep,name=contact_info,json=contactInfo,proto3" json:"contact_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Organization) Reset()      { *m = Organization{} }
func (*Organization) ProtoMessage() {}
func (*Organization) Descriptor() ([]byte, []int) {
	return fileDescriptor_312da2e2e650bd3b, []int{0}
}
func (m *Organization) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Organization.Unmarshal(m, b)
}
func (m *Organization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Organization.Marshal(b, m, deterministic)
}
func (m *Organization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Organization.Merge(m, src)
}
func (m *Organization) XXX_Size() int {
	return xxx_messageInfo_Organization.Size(m)
}
func (m *Organization) XXX_DiscardUnknown() {
	xxx_messageInfo_Organization.DiscardUnknown(m)
}

var xxx_messageInfo_Organization proto.InternalMessageInfo

func (m *Organization) GetCreatedAt() time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return time.Time{}
}

func (m *Organization) GetUpdatedAt() time.Time {
	if m != nil {
		return m.UpdatedAt
	}
	return time.Time{}
}

func (m *Organization) GetDeletedAt() *time.Time {
	if m != nil {
		return m.DeletedAt
	}
	return nil
}

func (m *Organization) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Organization) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Organization) GetAttributes() map[string]string {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Organization) GetContactInfo() []*ContactInfo {
	if m != nil {
		return m.ContactInfo
	}
	return nil
}

type Organizations struct {
	Organizations        []*Organization `protobuf:"bytes,1,rep,name=organizations,proto3" json:"organizations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Organizations) Reset()      { *m = Organizations{} }
func (*Organizations) ProtoMessage() {}
func (*Organizations) Descriptor() ([]byte, []int) {
	return fileDescriptor_312da2e2e650bd3b, []int{1}
}
func (m *Organizations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Organizations.Unmarshal(m, b)
}
func (m *Organizations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Organizations.Marshal(b, m, deterministic)
}
func (m *Organizations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Organizations.Merge(m, src)
}
func (m *Organizations) XXX_Size() int {
	return xxx_messageInfo_Organizations.Size(m)
}
func (m *Organizations) XXX_DiscardUnknown() {
	xxx_messageInfo_Organizations.DiscardUnknown(m)
}

var xxx_messageInfo_Organizations proto.InternalMessageInfo

func (m *Organizations) GetOrganizations() []*Organization {
	if m != nil {
		return m.Organizations
	}
	return nil
}

type GetOrganizationRequest struct {
	OrganizationIdentifiers `protobuf:"bytes,1,opt,name=organization_ids,json=organizationIds,proto3,embedded=organization_ids" json:"organization_ids"`
	// The names of the organization fields that should be returned.
	FieldMask            *types.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetOrganizationRequest) Reset()      { *m = GetOrganizationRequest{} }
func (*GetOrganizationRequest) ProtoMessage() {}
func (*GetOrganizationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_312da2e2e650bd3b, []int{2}
}
func (m *GetOrganizationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrganizationRequest.Unmarshal(m, b)
}
func (m *GetOrganizationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrganizationRequest.Marshal(b, m, deterministic)
}
func (m *GetOrganizationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrganizationRequest.Merge(m, src)
}
func (m *GetOrganizationRequest) XXX_Size() int {
	return xxx_messageInfo_GetOrganizationRequest.Size(m)
}
func (m *GetOrganizationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrganizationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrganizationRequest proto.InternalMessageInfo

func (m *GetOrganizationRequest) GetFieldMask() *types.FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

type ListOrganizationsRequest struct {
	// By default we list all organizations the caller has rights on.
	// Set the user to instead list the organizations
	// where the user or organization is collaborator on.
	// NOTE: It is currently not possible to have organizations collaborating on
	// other organizations.
	Collaborator *OrganizationOrUserIdentifiers `protobuf:"bytes,1,opt,name=collaborator,proto3" json:"collaborator,omitempty"`
	// The names of the organization fields that should be returned.
	FieldMask *types.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	// Order the results by this field path (must be present in the field mask).
	// Default ordering is by ID. Prepend with a minus (-) to reverse the order.
	Order string `protobuf:"bytes,3,opt,name=order,proto3" json:"order,omitempty"`
	// Limit the number of results per page.
	Limit uint32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	// Page number for pagination. 0 is interpreted as 1.
	Page uint32 `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	// Only return recently deleted organizations.
	Deleted              bool     `protobuf:"varint,6,opt,name=deleted,proto3" json:"deleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOrganizationsRequest) Reset()      { *m = ListOrganizationsRequest{} }
func (*ListOrganizationsRequest) ProtoMessage() {}
func (*ListOrganizationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_312da2e2e650bd3b, []int{3}
}
func (m *ListOrganizationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOrganizationsRequest.Unmarshal(m, b)
}
func (m *ListOrganizationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOrganizationsRequest.Marshal(b, m, deterministic)
}
func (m *ListOrganizationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOrganizationsRequest.Merge(m, src)
}
func (m *ListOrganizationsRequest) XXX_Size() int {
	return xxx_messageInfo_ListOrganizationsRequest.Size(m)
}
func (m *ListOrganizationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOrganizationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListOrganizationsRequest proto.InternalMessageInfo

func (m *ListOrganizationsRequest) GetCollaborator() *OrganizationOrUserIdentifiers {
	if m != nil {
		return m.Collaborator
	}
	return nil
}

func (m *ListOrganizationsRequest) GetFieldMask() *types.FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

func (m *ListOrganizationsRequest) GetOrder() string {
	if m != nil {
		return m.Order
	}
	return ""
}

func (m *ListOrganizationsRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListOrganizationsRequest) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListOrganizationsRequest) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

type CreateOrganizationRequest struct {
	Organization `protobuf:"bytes,1,opt,name=organization,proto3,embedded=organization" json:"organization"`
	// Collaborator to grant all rights on the newly created application.
	// NOTE: It is currently not possible to have organizations collaborating on
	// other organizations.
	Collaborator         OrganizationOrUserIdentifiers `protobuf:"bytes,2,opt,name=collaborator,proto3" json:"collaborator"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *CreateOrganizationRequest) Reset()      { *m = CreateOrganizationRequest{} }
func (*CreateOrganizationRequest) ProtoMessage() {}
func (*CreateOrganizationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_312da2e2e650bd3b, []int{4}
}
func (m *CreateOrganizationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOrganizationRequest.Unmarshal(m, b)
}
func (m *CreateOrganizationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOrganizationRequest.Marshal(b, m, deterministic)
}
func (m *CreateOrganizationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOrganizationRequest.Merge(m, src)
}
func (m *CreateOrganizationRequest) XXX_Size() int {
	return xxx_messageInfo_CreateOrganizationRequest.Size(m)
}
func (m *CreateOrganizationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOrganizationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOrganizationRequest proto.InternalMessageInfo

func (m *CreateOrganizationRequest) GetCollaborator() OrganizationOrUserIdentifiers {
	if m != nil {
		return m.Collaborator
	}
	return OrganizationOrUserIdentifiers{}
}

type UpdateOrganizationRequest struct {
	Organization `protobuf:"bytes,1,opt,name=organization,proto3,embedded=organization" json:"organization"`
	// The names of the organization fields that should be updated.
	FieldMask            *types.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UpdateOrganizationRequest) Reset()      { *m = UpdateOrganizationRequest{} }
func (*UpdateOrganizationRequest) ProtoMessage() {}
func (*UpdateOrganizationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_312da2e2e650bd3b, []int{5}
}
func (m *UpdateOrganizationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateOrganizationRequest.Unmarshal(m, b)
}
func (m *UpdateOrganizationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateOrganizationRequest.Marshal(b, m, deterministic)
}
func (m *UpdateOrganizationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateOrganizationRequest.Merge(m, src)
}
func (m *UpdateOrganizationRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateOrganizationRequest.Size(m)
}
func (m *UpdateOrganizationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateOrganizationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateOrganizationRequest proto.InternalMessageInfo

func (m *UpdateOrganizationRequest) GetFieldMask() *types.FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

type ListOrganizationAPIKeysRequest struct {
	OrganizationIdentifiers `protobuf:"bytes,1,opt,name=organization_ids,json=organizationIds,proto3,embedded=organization_ids" json:"organization_ids"`
	// Limit the number of results per page.
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Page number for pagination. 0 is interpreted as 1.
	Page                 uint32   `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOrganizationAPIKeysRequest) Reset()      { *m = ListOrganizationAPIKeysRequest{} }
func (*ListOrganizationAPIKeysRequest) ProtoMessage() {}
func (*ListOrganizationAPIKeysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_312da2e2e650bd3b, []int{6}
}
func (m *ListOrganizationAPIKeysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOrganizationAPIKeysRequest.Unmarshal(m, b)
}
func (m *ListOrganizationAPIKeysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOrganizationAPIKeysRequest.Marshal(b, m, deterministic)
}
func (m *ListOrganizationAPIKeysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOrganizationAPIKeysRequest.Merge(m, src)
}
func (m *ListOrganizationAPIKeysRequest) XXX_Size() int {
	return xxx_messageInfo_ListOrganizationAPIKeysRequest.Size(m)
}
func (m *ListOrganizationAPIKeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOrganizationAPIKeysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListOrganizationAPIKeysRequest proto.InternalMessageInfo

func (m *ListOrganizationAPIKeysRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListOrganizationAPIKeysRequest) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type GetOrganizationAPIKeyRequest struct {
	OrganizationIdentifiers `protobuf:"bytes,1,opt,name=organization_ids,json=organizationIds,proto3,embedded=organization_ids" json:"organization_ids"`
	// Unique public identifier for the API key.
	KeyId                string   `protobuf:"bytes,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOrganizationAPIKeyRequest) Reset()      { *m = GetOrganizationAPIKeyRequest{} }
func (*GetOrganizationAPIKeyRequest) ProtoMessage() {}
func (*GetOrganizationAPIKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_312da2e2e650bd3b, []int{7}
}
func (m *GetOrganizationAPIKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrganizationAPIKeyRequest.Unmarshal(m, b)
}
func (m *GetOrganizationAPIKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrganizationAPIKeyRequest.Marshal(b, m, deterministic)
}
func (m *GetOrganizationAPIKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrganizationAPIKeyRequest.Merge(m, src)
}
func (m *GetOrganizationAPIKeyRequest) XXX_Size() int {
	return xxx_messageInfo_GetOrganizationAPIKeyRequest.Size(m)
}
func (m *GetOrganizationAPIKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrganizationAPIKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrganizationAPIKeyRequest proto.InternalMessageInfo

func (m *GetOrganizationAPIKeyRequest) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

type CreateOrganizationAPIKeyRequest struct {
	OrganizationIdentifiers `protobuf:"bytes,1,opt,name=organization_ids,json=organizationIds,proto3,embedded=organization_ids" json:"organization_ids"`
	Name                    string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Rights                  []Right    `protobuf:"varint,3,rep,packed,name=rights,proto3,enum=ttn.lorawan.v3.Right" json:"rights,omitempty"`
	ExpiresAt               *time.Time `protobuf:"bytes,4,opt,name=expires_at,json=expiresAt,proto3,stdtime" json:"expires_at,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}   `json:"-"`
	XXX_sizecache           int32      `json:"-"`
}

func (m *CreateOrganizationAPIKeyRequest) Reset()      { *m = CreateOrganizationAPIKeyRequest{} }
func (*CreateOrganizationAPIKeyRequest) ProtoMessage() {}
func (*CreateOrganizationAPIKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_312da2e2e650bd3b, []int{8}
}
func (m *CreateOrganizationAPIKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOrganizationAPIKeyRequest.Unmarshal(m, b)
}
func (m *CreateOrganizationAPIKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOrganizationAPIKeyRequest.Marshal(b, m, deterministic)
}
func (m *CreateOrganizationAPIKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOrganizationAPIKeyRequest.Merge(m, src)
}
func (m *CreateOrganizationAPIKeyRequest) XXX_Size() int {
	return xxx_messageInfo_CreateOrganizationAPIKeyRequest.Size(m)
}
func (m *CreateOrganizationAPIKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOrganizationAPIKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOrganizationAPIKeyRequest proto.InternalMessageInfo

func (m *CreateOrganizationAPIKeyRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateOrganizationAPIKeyRequest) GetRights() []Right {
	if m != nil {
		return m.Rights
	}
	return nil
}

func (m *CreateOrganizationAPIKeyRequest) GetExpiresAt() *time.Time {
	if m != nil {
		return m.ExpiresAt
	}
	return nil
}

type UpdateOrganizationAPIKeyRequest struct {
	OrganizationIdentifiers `protobuf:"bytes,1,opt,name=organization_ids,json=organizationIds,proto3,embedded=organization_ids" json:"organization_ids"`
	APIKey                  `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3,embedded=api_key" json:"api_key"`
	// The names of the api key fields that should be updated.
	FieldMask            *types.FieldMask `protobuf:"bytes,3,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UpdateOrganizationAPIKeyRequest) Reset()      { *m = UpdateOrganizationAPIKeyRequest{} }
func (*UpdateOrganizationAPIKeyRequest) ProtoMessage() {}
func (*UpdateOrganizationAPIKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_312da2e2e650bd3b, []int{9}
}
func (m *UpdateOrganizationAPIKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateOrganizationAPIKeyRequest.Unmarshal(m, b)
}
func (m *UpdateOrganizationAPIKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateOrganizationAPIKeyRequest.Marshal(b, m, deterministic)
}
func (m *UpdateOrganizationAPIKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateOrganizationAPIKeyRequest.Merge(m, src)
}
func (m *UpdateOrganizationAPIKeyRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateOrganizationAPIKeyRequest.Size(m)
}
func (m *UpdateOrganizationAPIKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateOrganizationAPIKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateOrganizationAPIKeyRequest proto.InternalMessageInfo

func (m *UpdateOrganizationAPIKeyRequest) GetFieldMask() *types.FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

type ListOrganizationCollaboratorsRequest struct {
	OrganizationIdentifiers `protobuf:"bytes,1,opt,name=organization_ids,json=organizationIds,proto3,embedded=organization_ids" json:"organization_ids"`
	// Limit the number of results per page.
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Page number for pagination. 0 is interpreted as 1.
	Page                 uint32   `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOrganizationCollaboratorsRequest) Reset()      { *m = ListOrganizationCollaboratorsRequest{} }
func (*ListOrganizationCollaboratorsRequest) ProtoMessage() {}
func (*ListOrganizationCollaboratorsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_312da2e2e650bd3b, []int{10}
}
func (m *ListOrganizationCollaboratorsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOrganizationCollaboratorsRequest.Unmarshal(m, b)
}
func (m *ListOrganizationCollaboratorsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOrganizationCollaboratorsRequest.Marshal(b, m, deterministic)
}
func (m *ListOrganizationCollaboratorsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOrganizationCollaboratorsRequest.Merge(m, src)
}
func (m *ListOrganizationCollaboratorsRequest) XXX_Size() int {
	return xxx_messageInfo_ListOrganizationCollaboratorsRequest.Size(m)
}
func (m *ListOrganizationCollaboratorsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOrganizationCollaboratorsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListOrganizationCollaboratorsRequest proto.InternalMessageInfo

func (m *ListOrganizationCollaboratorsRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListOrganizationCollaboratorsRequest) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type GetOrganizationCollaboratorRequest struct {
	OrganizationIdentifiers `protobuf:"bytes,1,opt,name=organization_ids,json=organizationIds,proto3,embedded=organization_ids" json:"organization_ids"`
	// NOTE: It is currently not possible to have organizations collaborating on
	// other organizations.
	OrganizationOrUserIdentifiers `protobuf:"bytes,2,opt,name=collaborator,proto3,embedded=collaborator" json:"collaborator"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *GetOrganizationCollaboratorRequest) Reset()      { *m = GetOrganizationCollaboratorRequest{} }
func (*GetOrganizationCollaboratorRequest) ProtoMessage() {}
func (*GetOrganizationCollaboratorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_312da2e2e650bd3b, []int{11}
}
func (m *GetOrganizationCollaboratorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrganizationCollaboratorRequest.Unmarshal(m, b)
}
func (m *GetOrganizationCollaboratorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrganizationCollaboratorRequest.Marshal(b, m, deterministic)
}
func (m *GetOrganizationCollaboratorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrganizationCollaboratorRequest.Merge(m, src)
}
func (m *GetOrganizationCollaboratorRequest) XXX_Size() int {
	return xxx_messageInfo_GetOrganizationCollaboratorRequest.Size(m)
}
func (m *GetOrganizationCollaboratorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrganizationCollaboratorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrganizationCollaboratorRequest proto.InternalMessageInfo

type SetOrganizationCollaboratorRequest struct {
	OrganizationIdentifiers `protobuf:"bytes,1,opt,name=organization_ids,json=organizationIds,proto3,embedded=organization_ids" json:"organization_ids"`
	Collaborator            Collaborator `protobuf:"bytes,2,opt,name=collaborator,proto3" json:"collaborator"`
	XXX_NoUnkeyedLiteral    struct{}     `json:"-"`
	XXX_sizecache           int32        `json:"-"`
}

func (m *SetOrganizationCollaboratorRequest) Reset()      { *m = SetOrganizationCollaboratorRequest{} }
func (*SetOrganizationCollaboratorRequest) ProtoMessage() {}
func (*SetOrganizationCollaboratorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_312da2e2e650bd3b, []int{12}
}
func (m *SetOrganizationCollaboratorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetOrganizationCollaboratorRequest.Unmarshal(m, b)
}
func (m *SetOrganizationCollaboratorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetOrganizationCollaboratorRequest.Marshal(b, m, deterministic)
}
func (m *SetOrganizationCollaboratorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetOrganizationCollaboratorRequest.Merge(m, src)
}
func (m *SetOrganizationCollaboratorRequest) XXX_Size() int {
	return xxx_messageInfo_SetOrganizationCollaboratorRequest.Size(m)
}
func (m *SetOrganizationCollaboratorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetOrganizationCollaboratorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetOrganizationCollaboratorRequest proto.InternalMessageInfo

func (m *SetOrganizationCollaboratorRequest) GetCollaborator() Collaborator {
	if m != nil {
		return m.Collaborator
	}
	return Collaborator{}
}

func init() {
	proto.RegisterType((*Organization)(nil), "ttn.lorawan.v3.Organization")
	golang_proto.RegisterType((*Organization)(nil), "ttn.lorawan.v3.Organization")
	proto.RegisterMapType((map[string]string)(nil), "ttn.lorawan.v3.Organization.AttributesEntry")
	golang_proto.RegisterMapType((map[string]string)(nil), "ttn.lorawan.v3.Organization.AttributesEntry")
	proto.RegisterType((*Organizations)(nil), "ttn.lorawan.v3.Organizations")
	golang_proto.RegisterType((*Organizations)(nil), "ttn.lorawan.v3.Organizations")
	proto.RegisterType((*GetOrganizationRequest)(nil), "ttn.lorawan.v3.GetOrganizationRequest")
	golang_proto.RegisterType((*GetOrganizationRequest)(nil), "ttn.lorawan.v3.GetOrganizationRequest")
	proto.RegisterType((*ListOrganizationsRequest)(nil), "ttn.lorawan.v3.ListOrganizationsRequest")
	golang_proto.RegisterType((*ListOrganizationsRequest)(nil), "ttn.lorawan.v3.ListOrganizationsRequest")
	proto.RegisterType((*CreateOrganizationRequest)(nil), "ttn.lorawan.v3.CreateOrganizationRequest")
	golang_proto.RegisterType((*CreateOrganizationRequest)(nil), "ttn.lorawan.v3.CreateOrganizationRequest")
	proto.RegisterType((*UpdateOrganizationRequest)(nil), "ttn.lorawan.v3.UpdateOrganizationRequest")
	golang_proto.RegisterType((*UpdateOrganizationRequest)(nil), "ttn.lorawan.v3.UpdateOrganizationRequest")
	proto.RegisterType((*ListOrganizationAPIKeysRequest)(nil), "ttn.lorawan.v3.ListOrganizationAPIKeysRequest")
	golang_proto.RegisterType((*ListOrganizationAPIKeysRequest)(nil), "ttn.lorawan.v3.ListOrganizationAPIKeysRequest")
	proto.RegisterType((*GetOrganizationAPIKeyRequest)(nil), "ttn.lorawan.v3.GetOrganizationAPIKeyRequest")
	golang_proto.RegisterType((*GetOrganizationAPIKeyRequest)(nil), "ttn.lorawan.v3.GetOrganizationAPIKeyRequest")
	proto.RegisterType((*CreateOrganizationAPIKeyRequest)(nil), "ttn.lorawan.v3.CreateOrganizationAPIKeyRequest")
	golang_proto.RegisterType((*CreateOrganizationAPIKeyRequest)(nil), "ttn.lorawan.v3.CreateOrganizationAPIKeyRequest")
	proto.RegisterType((*UpdateOrganizationAPIKeyRequest)(nil), "ttn.lorawan.v3.UpdateOrganizationAPIKeyRequest")
	golang_proto.RegisterType((*UpdateOrganizationAPIKeyRequest)(nil), "ttn.lorawan.v3.UpdateOrganizationAPIKeyRequest")
	proto.RegisterType((*ListOrganizationCollaboratorsRequest)(nil), "ttn.lorawan.v3.ListOrganizationCollaboratorsRequest")
	golang_proto.RegisterType((*ListOrganizationCollaboratorsRequest)(nil), "ttn.lorawan.v3.ListOrganizationCollaboratorsRequest")
	proto.RegisterType((*GetOrganizationCollaboratorRequest)(nil), "ttn.lorawan.v3.GetOrganizationCollaboratorRequest")
	golang_proto.RegisterType((*GetOrganizationCollaboratorRequest)(nil), "ttn.lorawan.v3.GetOrganizationCollaboratorRequest")
	proto.RegisterType((*SetOrganizationCollaboratorRequest)(nil), "ttn.lorawan.v3.SetOrganizationCollaboratorRequest")
	golang_proto.RegisterType((*SetOrganizationCollaboratorRequest)(nil), "ttn.lorawan.v3.SetOrganizationCollaboratorRequest")
}

func init() {
	proto.RegisterFile("lorawan-stack/api/organization.proto", fileDescriptor_312da2e2e650bd3b)
}
func init() {
	golang_proto.RegisterFile("lorawan-stack/api/organization.proto", fileDescriptor_312da2e2e650bd3b)
}

var fileDescriptor_312da2e2e650bd3b = []byte{
	// 1106 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x57, 0x4d, 0x6c, 0x1b, 0x45,
	0x14, 0xf6, 0xac, 0x7f, 0x12, 0x3f, 0x27, 0x8d, 0x59, 0xd1, 0x6a, 0x9b, 0x46, 0x6b, 0x6b, 0x89,
	0x84, 0x89, 0xea, 0x35, 0x72, 0x84, 0x44, 0x23, 0xa1, 0xd4, 0x1b, 0x41, 0x89, 0x42, 0x69, 0xd9,
	0x92, 0x0b, 0x55, 0xb1, 0xc6, 0xde, 0xf1, 0x66, 0x64, 0x7b, 0x77, 0x99, 0x1d, 0xa7, 0x75, 0x11,
	0x12, 0xe2, 0xe7, 0xc2, 0xa9, 0xea, 0x11, 0x2e, 0x3d, 0x22, 0x2e, 0x48, 0x9c, 0x80, 0x53, 0x8f,
	0x3d, 0xe6, 0x88, 0x38, 0x04, 0x48, 0x2e, 0xbd, 0xc1, 0xd9, 0x27, 0xb4, 0x3f, 0xae, 0xd7, 0x6b,
	0xe3, 0xaa, 0xb4, 0x4a, 0xe1, 0x94, 0x99, 0xdd, 0xef, 0xbd, 0xf9, 0xde, 0xdb, 0xef, 0x7b, 0xe3,
	0xc0, 0x6a, 0xc7, 0x66, 0xf8, 0x26, 0xb6, 0xca, 0x2e, 0xc7, 0xcd, 0x76, 0x05, 0x3b, 0xb4, 0x62,
	0x33, 0x13, 0x5b, 0xf4, 0x36, 0xe6, 0xd4, 0xb6, 0x54, 0x87, 0xd9, 0xdc, 0x16, 0x4f, 0x71, 0x6e,
	0xa9, 0x21, 0x52, 0xdd, 0x5f, 0x5f, 0xae, 0x99, 0x94, 0xef, 0xf5, 0x1a, 0x6a, 0xd3, 0xee, 0x56,
	0x88, 0xb5, 0x6f, 0xf7, 0x1d, 0x66, 0xdf, 0xea, 0x57, 0x7c, 0x70, 0xb3, 0x6c, 0x12, 0xab, 0xbc,
	0x8f, 0x3b, 0xd4, 0xc0, 0x9c, 0x54, 0x26, 0x16, 0x41, 0xca, 0xe5, 0x72, 0x24, 0x85, 0x69, 0x9b,
	0x76, 0x10, 0xdc, 0xe8, 0xb5, 0xfc, 0x9d, 0xbf, 0xf1, 0x57, 0x21, 0xbc, 0x68, 0xda, 0xb6, 0xd9,
	0x21, 0x23, 0x54, 0x8b, 0x92, 0x8e, 0x51, 0xef, 0x62, 0xb7, 0x1d, 0x22, 0x0a, 0x71, 0x04, 0xa7,
	0x5d, 0xe2, 0x72, 0xdc, 0x75, 0x42, 0xc0, 0x94, 0x52, 0x9b, 0xb6, 0xc5, 0x71, 0x93, 0xd7, 0xa9,
	0xd5, 0x1a, 0x1e, 0xf4, 0xd2, 0x24, 0x8a, 0x1a, 0xc4, 0xe2, 0xb4, 0x45, 0x09, 0x73, 0x43, 0x90,
	0x3c, 0x09, 0x62, 0xd4, 0xdc, 0xe3, 0xe1, 0x7b, 0xe5, 0x8b, 0x34, 0x2c, 0x5c, 0x89, 0xb4, 0x51,
	0xdc, 0x81, 0x24, 0x35, 0x5c, 0x09, 0x15, 0x51, 0x29, 0x57, 0x7d, 0x59, 0x1d, 0x6f, 0xa7, 0x1a,
	0x85, 0x6e, 0x8f, 0x0e, 0xd3, 0xf2, 0x03, 0x2d, 0xfd, 0x15, 0x12, 0xf2, 0xe8, 0xc1, 0x61, 0x21,
	0x71, 0x70, 0x58, 0x40, 0xba, 0x97, 0x45, 0xdc, 0x02, 0x68, 0x32, 0x82, 0x39, 0x31, 0xea, 0x98,
	0x4b, 0x82, 0x9f, 0x73, 0x59, 0x0d, 0xca, 0x57, 0x87, 0xe5, 0xab, 0xef, 0x0f, 0xcb, 0xd7, 0xe6,
	0xbd, 0xf0, 0x3b, 0xbf, 0x15, 0x90, 0x9e, 0x0d, 0xe3, 0x6a, 0xdc, 0x4b, 0xd2, 0x73, 0x8c, 0x61,
	0x92, 0xe4, 0x93, 0x24, 0x09, 0xe3, 0x6a, 0x5c, 0xdc, 0x04, 0x30, 0x48, 0x87, 0x84, 0x49, 0xe6,
	0x1f, 0x9b, 0x24, 0x15, 0x24, 0x08, 0x63, 0x6a, 0x5c, 0x3c, 0x07, 0x29, 0x0b, 0x77, 0x89, 0x94,
	0x2a, 0xa2, 0x52, 0x56, 0x9b, 0x1b, 0x68, 0x29, 0x26, 0x48, 0x55, 0xdd, 0x7f, 0x28, 0xae, 0x41,
	0xce, 0x20, 0x6e, 0x93, 0x51, 0xc7, 0x6b, 0x8c, 0x94, 0xf6, 0x31, 0xf3, 0x03, 0x2d, 0xcd, 0x92,
	0xd2, 0xc1, 0x92, 0x1e, 0x7d, 0x29, 0x7e, 0x8e, 0x00, 0x30, 0xe7, 0x8c, 0x36, 0x7a, 0x9c, 0xb8,
	0x52, 0xa6, 0x98, 0x2c, 0xe5, 0xaa, 0xe7, 0x67, 0x35, 0x5a, 0xad, 0x3d, 0x82, 0xbf, 0x69, 0x71,
	0xd6, 0xd7, 0x5e, 0x1b, 0x68, 0xd5, 0xaf, 0x51, 0x25, 0x0f, 0xca, 0x2a, 0x53, 0xa4, 0xd5, 0xaa,
	0xfc, 0xe1, 0x75, 0x5c, 0xbe, 0xfd, 0x6a, 0xf9, 0xc2, 0x8d, 0xd2, 0xe6, 0xc6, 0xf5, 0xf2, 0x8d,
	0xcd, 0xe1, 0xf6, 0x95, 0x8f, 0xab, 0xe7, 0x3f, 0x59, 0x5d, 0xf3, 0x68, 0x3c, 0x40, 0x7a, 0xe4,
	0x58, 0xf1, 0x6d, 0x58, 0x88, 0x4a, 0x4a, 0x9a, 0xf3, 0x69, 0x9c, 0x8b, 0xd3, 0xd8, 0x0a, 0x30,
	0xdb, 0x56, 0xcb, 0xf6, 0xeb, 0xb9, 0x8b, 0x84, 0x3c, 0xe8, 0xb9, 0xe6, 0xe8, 0xf1, 0xf2, 0x1b,
	0xb0, 0x14, 0xe3, 0x27, 0xe6, 0x21, 0xd9, 0x26, 0x7d, 0x5f, 0x43, 0x59, 0xdd, 0x5b, 0x8a, 0x2f,
	0x42, 0x7a, 0x1f, 0x77, 0x7a, 0xc4, 0xd7, 0x40, 0x56, 0x0f, 0x36, 0x1b, 0xc2, 0xeb, 0x68, 0x23,
	0xf5, 0xe3, 0xbd, 0x02, 0x52, 0xae, 0xc1, 0x62, 0xb4, 0x62, 0x57, 0xd4, 0x60, 0x31, 0xea, 0x6e,
	0x4f, 0x90, 0x1e, 0xc1, 0x95, 0x59, 0x7d, 0xd2, 0xc7, 0x43, 0x94, 0x9f, 0x10, 0x9c, 0xb9, 0x44,
	0xf8, 0x18, 0x84, 0x7c, 0xd4, 0x23, 0x2e, 0x17, 0x0d, 0xc8, 0x47, 0xb1, 0xf5, 0x67, 0x22, 0xf9,
	0x25, 0x7b, 0x0c, 0xea, 0x8a, 0x17, 0x00, 0x46, 0xe6, 0xff, 0x47, 0xf9, 0xbf, 0xe5, 0x41, 0x2e,
	0x63, 0xb7, 0xad, 0x67, 0x5b, 0xc3, 0xa5, 0x72, 0x28, 0x80, 0xf4, 0x0e, 0x75, 0xc7, 0xc8, 0xbb,
	0x43, 0xf6, 0xef, 0x79, 0x1f, 0xaf, 0xd3, 0xc1, 0x0d, 0x9b, 0x61, 0x6e, 0xb3, 0x90, 0x79, 0x79,
	0x16, 0xf3, 0x2b, 0x6c, 0xd7, 0x25, 0x2c, 0xc2, 0x5f, 0x1f, 0x4b, 0xf1, 0x14, 0x54, 0xc5, 0x16,
	0xa4, 0x6d, 0x66, 0x10, 0xe6, 0x5b, 0x33, 0xab, 0x5d, 0x1d, 0x68, 0x97, 0xd9, 0x8e, 0x9e, 0x18,
	0x6f, 0x47, 0x9d, 0x1a, 0x7a, 0xbe, 0x1c, 0x7f, 0xe2, 0xbb, 0x47, 0x4f, 0x97, 0xfd, 0x3f, 0x91,
	0x51, 0xa1, 0xe7, 0xca, 0x91, 0x4d, 0x90, 0x5e, 0x94, 0x21, 0xdd, 0xa1, 0x5d, 0xca, 0x7d, 0x0b,
	0x2e, 0xfa, 0x72, 0x5c, 0x4b, 0x4a, 0x0f, 0xe7, 0xf4, 0xe0, 0xb1, 0x28, 0x42, 0xca, 0xc1, 0x26,
	0xf1, 0xdd, 0xb7, 0xa8, 0xfb, 0x6b, 0x51, 0x82, 0xb9, 0xd0, 0xc2, 0x52, 0xa6, 0x88, 0x4a, 0xf3,
	0xfa, 0x70, 0xab, 0x1c, 0x20, 0x38, 0xbb, 0xe5, 0x9f, 0x31, 0x4d, 0x1f, 0x3a, 0x2c, 0x44, 0xb9,
	0x86, 0x1d, 0x9e, 0xa9, 0xbe, 0x29, 0x82, 0x18, 0xcb, 0x21, 0xd6, 0x63, 0x5f, 0x4d, 0xf8, 0x17,
	0x5f, 0x4d, 0x5b, 0x88, 0x1e, 0x32, 0xfe, 0x0d, 0x95, 0xef, 0x10, 0x9c, 0xdd, 0xf5, 0x27, 0xde,
	0x49, 0x95, 0xf4, 0x14, 0x02, 0xff, 0x19, 0x81, 0x1c, 0x17, 0x78, 0xed, 0xea, 0xf6, 0x0e, 0xe9,
	0xbb, 0x27, 0x6b, 0xd2, 0x47, 0xb2, 0x12, 0x66, 0xcb, 0x2a, 0x39, 0x92, 0x95, 0xf2, 0x0d, 0x82,
	0x95, 0xd8, 0x64, 0x09, 0xb8, 0x9f, 0x2c, 0xf5, 0xd3, 0x90, 0x69, 0x93, 0x7e, 0x9d, 0x1a, 0xc3,
	0xb1, 0xda, 0x26, 0xfd, 0x6d, 0x43, 0xf9, 0x5e, 0x80, 0xc2, 0xa4, 0xb4, 0x9f, 0x07, 0xc1, 0xe1,
	0xa5, 0x29, 0x4c, 0xbb, 0x34, 0x2f, 0x42, 0x26, 0xf8, 0x29, 0x22, 0x25, 0x8b, 0xc9, 0xd2, 0xa9,
	0xea, 0xe9, 0xf8, 0xc1, 0xba, 0xf7, 0x56, 0x7b, 0x61, 0xa0, 0x9d, 0xba, 0x8b, 0x72, 0xf3, 0x48,
	0x42, 0x4a, 0xfa, 0x33, 0xef, 0x3c, 0x3d, 0x8c, 0x13, 0x2f, 0x01, 0x90, 0x5b, 0x0e, 0x65, 0xc4,
	0xf5, 0x2e, 0xf5, 0xd4, 0x63, 0x2f, 0x75, 0xcf, 0x3c, 0x3f, 0x20, 0xe1, 0x22, 0x0a, 0x2e, 0xf7,
	0x30, 0xb6, 0xc6, 0x95, 0x2f, 0x05, 0x28, 0x4c, 0x3a, 0xe7, 0x79, 0x74, 0xac, 0x06, 0x73, 0xd8,
	0xa1, 0x75, 0xef, 0xfa, 0x0c, 0xec, 0x74, 0x26, 0x9e, 0x3c, 0x60, 0x35, 0x25, 0x57, 0x06, 0x3b,
	0x74, 0x87, 0xf4, 0x63, 0xa6, 0x4c, 0x3e, 0x89, 0x29, 0xef, 0x23, 0x58, 0x8d, 0x9b, 0x72, 0x2b,
	0x32, 0x62, 0xfe, 0x07, 0xd6, 0xfc, 0x13, 0x81, 0x12, 0xb3, 0x66, 0xb4, 0x82, 0x93, 0x2d, 0xa0,
	0xf9, 0x2c, 0x46, 0xfe, 0x94, 0x21, 0x3c, 0x36, 0xf6, 0x7f, 0x45, 0xa0, 0x5c, 0xfb, 0xaf, 0x54,
	0xfc, 0xee, 0xd4, 0x8a, 0x57, 0x26, 0x7f, 0x57, 0x8e, 0x30, 0xb3, 0xee, 0x34, 0x6d, 0xf7, 0x97,
	0x3f, 0xe4, 0xc4, 0xa7, 0x47, 0x32, 0xfa, 0xf6, 0x48, 0x46, 0xbf, 0x1f, 0xc9, 0xe8, 0xe1, 0x91,
	0x9c, 0xf8, 0xeb, 0x48, 0x46, 0x77, 0x8e, 0xe5, 0xc4, 0xbd, 0x63, 0x39, 0x71, 0xff, 0x58, 0x46,
	0x1f, 0x54, 0x4c, 0x5b, 0xe5, 0x7b, 0x84, 0xef, 0x51, 0xcb, 0x74, 0x55, 0x8b, 0xf0, 0x9b, 0x36,
	0x6b, 0x57, 0xc6, 0xff, 0xf5, 0xd9, 0x5f, 0xaf, 0x38, 0x6d, 0xb3, 0xc2, 0xb9, 0xe5, 0x34, 0x1a,
	0x19, 0xdf, 0x07, 0xeb, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x8c, 0xbe, 0xb5, 0x6e, 0x55, 0x0e,
	0x00, 0x00,
}

func (this *Organization) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Organization)
	if !ok {
		that2, ok := that.(Organization)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.OrganizationIdentifiers.Equal(&that1.OrganizationIdentifiers) {
		return false
	}
	if !this.CreatedAt.Equal(that1.CreatedAt) {
		return false
	}
	if !this.UpdatedAt.Equal(that1.UpdatedAt) {
		return false
	}
	if that1.DeletedAt == nil {
		if this.DeletedAt != nil {
			return false
		}
	} else if !this.DeletedAt.Equal(*that1.DeletedAt) {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.Description != that1.Description {
		return false
	}
	if len(this.Attributes) != len(that1.Attributes) {
		return false
	}
	for i := range this.Attributes {
		if this.Attributes[i] != that1.Attributes[i] {
			return false
		}
	}
	if len(this.ContactInfo) != len(that1.ContactInfo) {
		return false
	}
	for i := range this.ContactInfo {
		if !this.ContactInfo[i].Equal(that1.ContactInfo[i]) {
			return false
		}
	}
	return true
}
func (this *Organizations) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Organizations)
	if !ok {
		that2, ok := that.(Organizations)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Organizations) != len(that1.Organizations) {
		return false
	}
	for i := range this.Organizations {
		if !this.Organizations[i].Equal(that1.Organizations[i]) {
			return false
		}
	}
	return true
}
func (this *GetOrganizationRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetOrganizationRequest)
	if !ok {
		that2, ok := that.(GetOrganizationRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.OrganizationIdentifiers.Equal(&that1.OrganizationIdentifiers) {
		return false
	}
	if !this.FieldMask.Equal(that1.FieldMask) {
		return false
	}
	return true
}
func (this *ListOrganizationsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListOrganizationsRequest)
	if !ok {
		that2, ok := that.(ListOrganizationsRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Collaborator.Equal(that1.Collaborator) {
		return false
	}
	if !this.FieldMask.Equal(that1.FieldMask) {
		return false
	}
	if this.Order != that1.Order {
		return false
	}
	if this.Limit != that1.Limit {
		return false
	}
	if this.Page != that1.Page {
		return false
	}
	if this.Deleted != that1.Deleted {
		return false
	}
	return true
}
func (this *CreateOrganizationRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateOrganizationRequest)
	if !ok {
		that2, ok := that.(CreateOrganizationRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Organization.Equal(&that1.Organization) {
		return false
	}
	if !this.Collaborator.Equal(&that1.Collaborator) {
		return false
	}
	return true
}
func (this *UpdateOrganizationRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpdateOrganizationRequest)
	if !ok {
		that2, ok := that.(UpdateOrganizationRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Organization.Equal(&that1.Organization) {
		return false
	}
	if !this.FieldMask.Equal(that1.FieldMask) {
		return false
	}
	return true
}
func (this *ListOrganizationAPIKeysRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListOrganizationAPIKeysRequest)
	if !ok {
		that2, ok := that.(ListOrganizationAPIKeysRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.OrganizationIdentifiers.Equal(&that1.OrganizationIdentifiers) {
		return false
	}
	if this.Limit != that1.Limit {
		return false
	}
	if this.Page != that1.Page {
		return false
	}
	return true
}
func (this *GetOrganizationAPIKeyRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetOrganizationAPIKeyRequest)
	if !ok {
		that2, ok := that.(GetOrganizationAPIKeyRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.OrganizationIdentifiers.Equal(&that1.OrganizationIdentifiers) {
		return false
	}
	if this.KeyId != that1.KeyId {
		return false
	}
	return true
}
func (this *CreateOrganizationAPIKeyRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateOrganizationAPIKeyRequest)
	if !ok {
		that2, ok := that.(CreateOrganizationAPIKeyRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.OrganizationIdentifiers.Equal(&that1.OrganizationIdentifiers) {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if len(this.Rights) != len(that1.Rights) {
		return false
	}
	for i := range this.Rights {
		if this.Rights[i] != that1.Rights[i] {
			return false
		}
	}
	if that1.ExpiresAt == nil {
		if this.ExpiresAt != nil {
			return false
		}
	} else if !this.ExpiresAt.Equal(*that1.ExpiresAt) {
		return false
	}
	return true
}
func (this *UpdateOrganizationAPIKeyRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpdateOrganizationAPIKeyRequest)
	if !ok {
		that2, ok := that.(UpdateOrganizationAPIKeyRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.OrganizationIdentifiers.Equal(&that1.OrganizationIdentifiers) {
		return false
	}
	if !this.APIKey.Equal(&that1.APIKey) {
		return false
	}
	if !this.FieldMask.Equal(that1.FieldMask) {
		return false
	}
	return true
}
func (this *ListOrganizationCollaboratorsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListOrganizationCollaboratorsRequest)
	if !ok {
		that2, ok := that.(ListOrganizationCollaboratorsRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.OrganizationIdentifiers.Equal(&that1.OrganizationIdentifiers) {
		return false
	}
	if this.Limit != that1.Limit {
		return false
	}
	if this.Page != that1.Page {
		return false
	}
	return true
}
func (this *GetOrganizationCollaboratorRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetOrganizationCollaboratorRequest)
	if !ok {
		that2, ok := that.(GetOrganizationCollaboratorRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.OrganizationIdentifiers.Equal(&that1.OrganizationIdentifiers) {
		return false
	}
	if !this.OrganizationOrUserIdentifiers.Equal(&that1.OrganizationOrUserIdentifiers) {
		return false
	}
	return true
}
func (this *SetOrganizationCollaboratorRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SetOrganizationCollaboratorRequest)
	if !ok {
		that2, ok := that.(SetOrganizationCollaboratorRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.OrganizationIdentifiers.Equal(&that1.OrganizationIdentifiers) {
		return false
	}
	if !this.Collaborator.Equal(&that1.Collaborator) {
		return false
	}
	return true
}
func NewPopulatedOrganization(r randyOrganization, easy bool) *Organization {
	this := &Organization{}
	v1 := NewPopulatedOrganizationIdentifiers(r, easy)
	this.OrganizationIdentifiers = *v1
	v2 := github_com_gogo_protobuf_types.NewPopulatedStdTime(r, easy)
	this.CreatedAt = *v2
	v3 := github_com_gogo_protobuf_types.NewPopulatedStdTime(r, easy)
	this.UpdatedAt = *v3
	if r.Intn(5) != 0 {
		this.DeletedAt = github_com_gogo_protobuf_types.NewPopulatedStdTime(r, easy)
	}
	this.Name = string(randStringOrganization(r))
	this.Description = string(randStringOrganization(r))
	if r.Intn(5) != 0 {
		v4 := r.Intn(10)
		this.Attributes = make(map[string]string)
		for i := 0; i < v4; i++ {
			this.Attributes[randStringOrganization(r)] = randStringOrganization(r)
		}
	}
	if r.Intn(5) != 0 {
		v5 := r.Intn(5)
		this.ContactInfo = make([]*ContactInfo, v5)
		for i := 0; i < v5; i++ {
			this.ContactInfo[i] = NewPopulatedContactInfo(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

type randyOrganization interface {
	Float32() float32
	Float64() float64
	Int63() int64
	Int31() int32
	Uint32() uint32
	Intn(n int) int
}

func randUTF8RuneOrganization(r randyOrganization) rune {
	ru := r.Intn(62)
	if ru < 10 {
		return rune(ru + 48)
	} else if ru < 36 {
		return rune(ru + 55)
	}
	return rune(ru + 61)
}
func randStringOrganization(r randyOrganization) string {
	v6 := r.Intn(100)
	tmps := make([]rune, v6)
	for i := 0; i < v6; i++ {
		tmps[i] = randUTF8RuneOrganization(r)
	}
	return string(tmps)
}
func randUnrecognizedOrganization(r randyOrganization, maxFieldNumber int) (dAtA []byte) {
	l := r.Intn(5)
	for i := 0; i < l; i++ {
		wire := r.Intn(4)
		if wire == 3 {
			wire = 5
		}
		fieldNumber := maxFieldNumber + r.Intn(100)
		dAtA = randFieldOrganization(dAtA, r, fieldNumber, wire)
	}
	return dAtA
}
func randFieldOrganization(dAtA []byte, r randyOrganization, fieldNumber int, wire int) []byte {
	key := uint32(fieldNumber)<<3 | uint32(wire)
	switch wire {
	case 0:
		dAtA = encodeVarintPopulateOrganization(dAtA, uint64(key))
		v7 := r.Int63()
		if r.Intn(2) == 0 {
			v7 *= -1
		}
		dAtA = encodeVarintPopulateOrganization(dAtA, uint64(v7))
	case 1:
		dAtA = encodeVarintPopulateOrganization(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	case 2:
		dAtA = encodeVarintPopulateOrganization(dAtA, uint64(key))
		ll := r.Intn(100)
		dAtA = encodeVarintPopulateOrganization(dAtA, uint64(ll))
		for j := 0; j < ll; j++ {
			dAtA = append(dAtA, byte(r.Intn(256)))
		}
	default:
		dAtA = encodeVarintPopulateOrganization(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	}
	return dAtA
}
func encodeVarintPopulateOrganization(dAtA []byte, v uint64) []byte {
	for v >= 1<<7 {
		dAtA = append(dAtA, uint8(uint64(v)&0x7f|0x80))
		v >>= 7
	}
	dAtA = append(dAtA, uint8(v))
	return dAtA
}
func (m *Organization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.OrganizationIdentifiers.Size()
	n += 1 + l + sovOrganization(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.CreatedAt)
	n += 1 + l + sovOrganization(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.UpdatedAt)
	n += 1 + l + sovOrganization(uint64(l))
	if m.DeletedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.DeletedAt)
		n += 1 + l + sovOrganization(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovOrganization(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovOrganization(uint64(l))
	}
	if len(m.Attributes) > 0 {
		for k, v := range m.Attributes {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovOrganization(uint64(len(k))) + 1 + len(v) + sovOrganization(uint64(len(v)))
			n += mapEntrySize + 1 + sovOrganization(uint64(mapEntrySize))
		}
	}
	if len(m.ContactInfo) > 0 {
		for _, e := range m.ContactInfo {
			l = e.Size()
			n += 1 + l + sovOrganization(uint64(l))
		}
	}
	return n
}

func (m *Organizations) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Organizations) > 0 {
		for _, e := range m.Organizations {
			l = e.Size()
			n += 1 + l + sovOrganization(uint64(l))
		}
	}
	return n
}

func (m *GetOrganizationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.OrganizationIdentifiers.Size()
	n += 1 + l + sovOrganization(uint64(l))
	if m.FieldMask != nil {
		l = m.FieldMask.Size()
		n += 1 + l + sovOrganization(uint64(l))
	}
	return n
}

func (m *ListOrganizationsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Collaborator != nil {
		l = m.Collaborator.Size()
		n += 1 + l + sovOrganization(uint64(l))
	}
	if m.FieldMask != nil {
		l = m.FieldMask.Size()
		n += 1 + l + sovOrganization(uint64(l))
	}
	l = len(m.Order)
	if l > 0 {
		n += 1 + l + sovOrganization(uint64(l))
	}
	if m.Limit != 0 {
		n += 1 + sovOrganization(uint64(m.Limit))
	}
	if m.Page != 0 {
		n += 1 + sovOrganization(uint64(m.Page))
	}
	if m.Deleted {
		n += 2
	}
	return n
}

func (m *CreateOrganizationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Organization.Size()
	n += 1 + l + sovOrganization(uint64(l))
	l = m.Collaborator.Size()
	n += 1 + l + sovOrganization(uint64(l))
	return n
}

func (m *UpdateOrganizationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Organization.Size()
	n += 1 + l + sovOrganization(uint64(l))
	if m.FieldMask != nil {
		l = m.FieldMask.Size()
		n += 1 + l + sovOrganization(uint64(l))
	}
	return n
}

func (m *ListOrganizationAPIKeysRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.OrganizationIdentifiers.Size()
	n += 1 + l + sovOrganization(uint64(l))
	if m.Limit != 0 {
		n += 1 + sovOrganization(uint64(m.Limit))
	}
	if m.Page != 0 {
		n += 1 + sovOrganization(uint64(m.Page))
	}
	return n
}

func (m *GetOrganizationAPIKeyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.OrganizationIdentifiers.Size()
	n += 1 + l + sovOrganization(uint64(l))
	l = len(m.KeyId)
	if l > 0 {
		n += 1 + l + sovOrganization(uint64(l))
	}
	return n
}

func (m *CreateOrganizationAPIKeyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.OrganizationIdentifiers.Size()
	n += 1 + l + sovOrganization(uint64(l))
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovOrganization(uint64(l))
	}
	if len(m.Rights) > 0 {
		l = 0
		for _, e := range m.Rights {
			l += sovOrganization(uint64(e))
		}
		n += 1 + sovOrganization(uint64(l)) + l
	}
	if m.ExpiresAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.ExpiresAt)
		n += 1 + l + sovOrganization(uint64(l))
	}
	return n
}

func (m *UpdateOrganizationAPIKeyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.OrganizationIdentifiers.Size()
	n += 1 + l + sovOrganization(uint64(l))
	l = m.APIKey.Size()
	n += 1 + l + sovOrganization(uint64(l))
	if m.FieldMask != nil {
		l = m.FieldMask.Size()
		n += 1 + l + sovOrganization(uint64(l))
	}
	return n
}

func (m *ListOrganizationCollaboratorsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.OrganizationIdentifiers.Size()
	n += 1 + l + sovOrganization(uint64(l))
	if m.Limit != 0 {
		n += 1 + sovOrganization(uint64(m.Limit))
	}
	if m.Page != 0 {
		n += 1 + sovOrganization(uint64(m.Page))
	}
	return n
}

func (m *GetOrganizationCollaboratorRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.OrganizationIdentifiers.Size()
	n += 1 + l + sovOrganization(uint64(l))
	l = m.OrganizationOrUserIdentifiers.Size()
	n += 1 + l + sovOrganization(uint64(l))
	return n
}

func (m *SetOrganizationCollaboratorRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.OrganizationIdentifiers.Size()
	n += 1 + l + sovOrganization(uint64(l))
	l = m.Collaborator.Size()
	n += 1 + l + sovOrganization(uint64(l))
	return n
}

func sovOrganization(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozOrganization(x uint64) (n int) {
	return sovOrganization(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *Organization) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForContactInfo := "[]*ContactInfo{"
	for _, f := range this.ContactInfo {
		repeatedStringForContactInfo += strings.Replace(fmt.Sprintf("%v", f), "ContactInfo", "ContactInfo", 1) + ","
	}
	repeatedStringForContactInfo += "}"
	keysForAttributes := make([]string, 0, len(this.Attributes))
	for k := range this.Attributes {
		keysForAttributes = append(keysForAttributes, k)
	}
	github_com_gogo_protobuf_sortkeys.Strings(keysForAttributes)
	mapStringForAttributes := "map[string]string{"
	for _, k := range keysForAttributes {
		mapStringForAttributes += fmt.Sprintf("%v: %v,", k, this.Attributes[k])
	}
	mapStringForAttributes += "}"
	s := strings.Join([]string{`&Organization{`,
		`OrganizationIdentifiers:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.OrganizationIdentifiers), "OrganizationIdentifiers", "OrganizationIdentifiers", 1), `&`, ``, 1) + `,`,
		`CreatedAt:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.CreatedAt), "Timestamp", "types.Timestamp", 1), `&`, ``, 1) + `,`,
		`UpdatedAt:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.UpdatedAt), "Timestamp", "types.Timestamp", 1), `&`, ``, 1) + `,`,
		`DeletedAt:` + strings.Replace(fmt.Sprintf("%v", this.DeletedAt), "Timestamp", "types.Timestamp", 1) + `,`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`Description:` + fmt.Sprintf("%v", this.Description) + `,`,
		`Attributes:` + mapStringForAttributes + `,`,
		`ContactInfo:` + repeatedStringForContactInfo + `,`,
		`}`,
	}, "")
	return s
}
func (this *Organizations) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForOrganizations := "[]*Organization{"
	for _, f := range this.Organizations {
		repeatedStringForOrganizations += strings.Replace(f.String(), "Organization", "Organization", 1) + ","
	}
	repeatedStringForOrganizations += "}"
	s := strings.Join([]string{`&Organizations{`,
		`Organizations:` + repeatedStringForOrganizations + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetOrganizationRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetOrganizationRequest{`,
		`OrganizationIdentifiers:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.OrganizationIdentifiers), "OrganizationIdentifiers", "OrganizationIdentifiers", 1), `&`, ``, 1) + `,`,
		`FieldMask:` + strings.Replace(fmt.Sprintf("%v", this.FieldMask), "FieldMask", "types.FieldMask", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ListOrganizationsRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ListOrganizationsRequest{`,
		`Collaborator:` + strings.Replace(fmt.Sprintf("%v", this.Collaborator), "OrganizationOrUserIdentifiers", "OrganizationOrUserIdentifiers", 1) + `,`,
		`FieldMask:` + strings.Replace(fmt.Sprintf("%v", this.FieldMask), "FieldMask", "types.FieldMask", 1) + `,`,
		`Order:` + fmt.Sprintf("%v", this.Order) + `,`,
		`Limit:` + fmt.Sprintf("%v", this.Limit) + `,`,
		`Page:` + fmt.Sprintf("%v", this.Page) + `,`,
		`Deleted:` + fmt.Sprintf("%v", this.Deleted) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateOrganizationRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateOrganizationRequest{`,
		`Organization:` + strings.Replace(strings.Replace(this.Organization.String(), "Organization", "Organization", 1), `&`, ``, 1) + `,`,
		`Collaborator:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.Collaborator), "OrganizationOrUserIdentifiers", "OrganizationOrUserIdentifiers", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *UpdateOrganizationRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&UpdateOrganizationRequest{`,
		`Organization:` + strings.Replace(strings.Replace(this.Organization.String(), "Organization", "Organization", 1), `&`, ``, 1) + `,`,
		`FieldMask:` + strings.Replace(fmt.Sprintf("%v", this.FieldMask), "FieldMask", "types.FieldMask", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ListOrganizationAPIKeysRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ListOrganizationAPIKeysRequest{`,
		`OrganizationIdentifiers:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.OrganizationIdentifiers), "OrganizationIdentifiers", "OrganizationIdentifiers", 1), `&`, ``, 1) + `,`,
		`Limit:` + fmt.Sprintf("%v", this.Limit) + `,`,
		`Page:` + fmt.Sprintf("%v", this.Page) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetOrganizationAPIKeyRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetOrganizationAPIKeyRequest{`,
		`OrganizationIdentifiers:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.OrganizationIdentifiers), "OrganizationIdentifiers", "OrganizationIdentifiers", 1), `&`, ``, 1) + `,`,
		`KeyId:` + fmt.Sprintf("%v", this.KeyId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateOrganizationAPIKeyRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateOrganizationAPIKeyRequest{`,
		`OrganizationIdentifiers:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.OrganizationIdentifiers), "OrganizationIdentifiers", "OrganizationIdentifiers", 1), `&`, ``, 1) + `,`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`Rights:` + fmt.Sprintf("%v", this.Rights) + `,`,
		`ExpiresAt:` + strings.Replace(fmt.Sprintf("%v", this.ExpiresAt), "Timestamp", "types.Timestamp", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *UpdateOrganizationAPIKeyRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&UpdateOrganizationAPIKeyRequest{`,
		`OrganizationIdentifiers:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.OrganizationIdentifiers), "OrganizationIdentifiers", "OrganizationIdentifiers", 1), `&`, ``, 1) + `,`,
		`APIKey:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.APIKey), "APIKey", "APIKey", 1), `&`, ``, 1) + `,`,
		`FieldMask:` + strings.Replace(fmt.Sprintf("%v", this.FieldMask), "FieldMask", "types.FieldMask", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ListOrganizationCollaboratorsRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ListOrganizationCollaboratorsRequest{`,
		`OrganizationIdentifiers:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.OrganizationIdentifiers), "OrganizationIdentifiers", "OrganizationIdentifiers", 1), `&`, ``, 1) + `,`,
		`Limit:` + fmt.Sprintf("%v", this.Limit) + `,`,
		`Page:` + fmt.Sprintf("%v", this.Page) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetOrganizationCollaboratorRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetOrganizationCollaboratorRequest{`,
		`OrganizationIdentifiers:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.OrganizationIdentifiers), "OrganizationIdentifiers", "OrganizationIdentifiers", 1), `&`, ``, 1) + `,`,
		`OrganizationOrUserIdentifiers:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.OrganizationOrUserIdentifiers), "OrganizationOrUserIdentifiers", "OrganizationOrUserIdentifiers", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *SetOrganizationCollaboratorRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SetOrganizationCollaboratorRequest{`,
		`OrganizationIdentifiers:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.OrganizationIdentifiers), "OrganizationIdentifiers", "OrganizationIdentifiers", 1), `&`, ``, 1) + `,`,
		`Collaborator:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.Collaborator), "Collaborator", "Collaborator", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringOrganization(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
